[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[sub_resource type="VisualShaderNodeScalarUniform" id=6]
uniform_name = "White"

[sub_resource type="VisualShaderNodeTexture" id=7]
source = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=8]

[sub_resource type="VisualShaderNodeColorUniform" id=33]
uniform_name = "BlinkColor"

[sub_resource type="VisualShader" id=4]
code = "shader_type canvas_item;
uniform vec4 BlinkColor : hint_color;
uniform float White;



void vertex() {
// Output:0

}

void fragment() {
// Texture:7
	vec3 n_out7p0;
	float n_out7p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out7p0 = _tex_read.rgb;
		n_out7p1 = _tex_read.a;
	}

// ColorUniform:9
	vec3 n_out9p0 = BlinkColor.rgb;
	float n_out9p1 = BlinkColor.a;

// ScalarUniform:2
	float n_out2p0 = White;

// VectorMix:8
	vec3 n_out8p0 = mix(n_out7p0, n_out9p0, vec3(n_out2p0));

// Output:0
	COLOR.rgb = n_out8p0;
	COLOR.a = n_out7p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -795, 60 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 140, 320 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -400, 440 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( -400, 180 )
nodes/fragment/8/node = SubResource( 8 )
nodes/fragment/8/position = Vector2( -60, 180 )
nodes/fragment/9/node = SubResource( 33 )
nodes/fragment/9/position = Vector2( -400, 320 )
nodes/fragment/connections = PoolIntArray( 2, 0, 8, 2, 8, 0, 0, 0, 7, 0, 8, 0, 9, 0, 8, 1, 7, 1, 0, 1 )

[resource]
shader = SubResource( 4 )
shader_param/BlinkColor = Color( 1, 1, 1, 1 )
shader_param/White = 0.0
